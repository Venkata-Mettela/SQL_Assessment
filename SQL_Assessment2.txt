    1.List the department without any employees in it.   
            SELECT d.dname, e.ename
            FROM dept d
            LEFT JOIN emp e 
            ON d.deptno = e.deptno
            WHERE e.deptno IS NULL;

    2.List the name and job of the employees who does not report to   anybody.
            SELECT e.ename, e.job 
	    FROM emp e , dept d  
	    WHERE e.deptno = d.deptno AND mgr IS NULL;

    3.Write a query that will give you the names and jobs of all employees in New   
      York with a commission above 1000 .  
            SELECT e.ename, e.job, d.loc, e.comm 
	    FROM emp e , dept d  
	    WHERE e.deptno = d.deptno AND loc LIKE'%NEW%' AND comm>1000;

    4.How many employees work in Chicago?
            SELECT count(*) AS 'Total_emp', d.loc
	    FROM emp e, dept d  
	    WHERE e.deptno = d.deptno AND loc ='CHICAGO'
	    GROUP BY d.loc;

    5.Which employees work in Chicago?
            SELECT e.ename, d.loc
	    FROM emp e , dept d 
	    WHERE e.deptno = d.deptno AND loc='CHICAGO';

    6.List the employeesâ€™ names and cities in which they work. Order the list by city.
            SELECT e.ename, d.loc
	    FROM emp e JOIN dept d 
	    ON e.deptno = d.deptno 
	    ORDER BY d.loc;

     7.Find the number of employees and number of departments.
            SELECT COUNT(DISTINCT e.ename) AS 'Total_emp',
	           COUNT(DISTINCT d.deptno) AS 'Total_dept'
	    FROM emp e, dept d;

     8.Display the employees who were hired before their managers.
            SELECT e.ename, m.ename 'MANAGER', m.hiredate 'MANAGER HIREDATE',e.hiredate
	    FROM emp e,emp m
	    WHERE e.mgr = m.empno AND e.hiredate<m.hiredate;
	
     9.Determine the number of managers without listing them.
            SELECT COUNT(job) Total_Mgr 
            FROM emp
            WHERE job ='MANAGER';

     10.Display the name and title of all employees who do not have a manager.
            SELECT e.ename, e.job 
	    FROM emp e , dept d  
            WHERE e.deptno = d.deptno AND mgr IS NULL;

     11.Create a query to display the employee name and department number for  
        employee SMITH.
            SELECT ename, deptno
            FROM emp
            WHERE ename = 'SMITH';

      12.Display the salesmen who are not in Boston
            SELECT e.ename,e.job, d.loc
            FROM emp e, dept d 
            WHERE e.deptno = d.deptno AND e.job ='SALESMAN' AND d.loc <>'BOSTON';

     13.List the details of the employees along with their location
            SELECT *
            FROM emp e,dept d
            WHERE e.deptno = d.deptno;

     14.List the salesmen who are drawing salary less than Miller
            SELECT ename,job
            FROM   emp
            WHERE job = 'SALESMAN' AND sal <
                                  (SELECT sal
                                   FROM   emp
                                    WHERE ename = 'MILLER');

      15.Display the details of the employee working in Chicago
            SELECT *
            FROM emp e
            JOIN dept d ON e.deptno = d.deptno
            WHERE d.loc = 'CHICAGO';

      16.Find the names of all employees whose salaries are greater than the minimum                                                 
         salary for the manager.
            SELECT * FROM emp
            WHERE sal > 
            ANY(SELECT MIN(sal)FROM emp WHERE empno=mgr GROUP BY empno);

      17. Select the last name and job id from all employees whose department id is equal                 
          to accounting
            SELECT e.ename, e.job,d.dname, e.deptno
            FROM emp e, dept d 
            WHERE e.deptno = d.deptno AND d.dname = 'ACCOUNTING';

     18.Display those emp who are working as manager
            SELECT ename, job FROM emp
            WHERE job ='MANAGER';

     19.write a subquery using case statement to display non sales if department is not 
        sales
            SELECT dname,
            CASE
            WHEN dname = 'SALES' THEN 'SALES'
            ELSE 'NON SALES'
            END AS 'CHECK'
            FROM dept

     20.If salary of an employee is more than 1000, then display salary otherwise display 1000.
            SELECT sal,
            CASE
            WHEN sal > 1000 THEN sal
            Else 1000
            END AS 'SALARY'
            FROM emp; 

     21.Display salary as low, medium high based on salary range
        Less than 1000 less
        1000 to 2500 medium
        More than 2500 high

            SELECT sal,
            CASE
            WHEN sal < 1000 THEN 'LESS' 
            WHEN sal> 2500 THEN 'HIGH'
	    ELSE 'MEDIUM'
            END AS 'DESC'
            FROM emp;